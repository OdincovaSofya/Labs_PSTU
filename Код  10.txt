#include "pch.h"
#include <iostream>
#include <ctime>

using namespace std;

int * createArray(int size);
void printArray(int* arr, int size);
int * deleteItems(int* arr, int size, int numDel, int& newSize);
void clearMemory(int* &arr);
int numCheck(int number, int size);
int * addItems(int* arr, int size, int numAdd, int& newSize);

int main()
{
	const int NotUsed = system("color F0"); //меняем цветовую гамму консоли 
	setlocale(LC_ALL, ""); // Позволяет выводить русский текст
	srand(time(0));
	int arrSize = 0, numDelete = 0, numAdd = 0;
	int * arr = NULL;

	cout << "Введите размер создаваемого массива - ";
	cin >> arrSize;
	arr = createArray(arrSize);
	cout << "\nВ везульате генерации получен следующий массив чисел:\n";
	printArray(arr, arrSize);
	cout << "\nВведите номер элемента который требуется удалить - ";
	cin >> numDelete;
	arr = deleteItems(arr, arrSize, numDelete, arrSize);
	printArray(arr, arrSize);
	cout << "\nВведите номер элемента который хотите добавить - ";
	cin >> numAdd;
	arr = addItems(arr, arrSize, numAdd, arrSize);
	printArray(arr, arrSize);
	clearMemory(arr);
	
}

int * createArray(int size) // функция создает массив и заплняет его случайными числами
{
	int i = 0;
	int* arr = new int[size];
	for (i; i < size; i++) arr[i] = rand() % 1000;
	return arr;
}

void printArray(int* arr, int size) // функция распечатывает массив
{
	if (arr == NULL) return;
	cout << endl;
	for (int i = 0; i < size; i++)	cout << arr[i] << " ";
	cout << endl;
}

int * deleteItems(int* arr, int size, int numDel, int& newSize) // функция удаления элемента из массива
{
	if (arr == NULL) return NULL;
	numDel = numCheck(numDel, size);
	newSize = size - 1;
	int * newArray = new int[newSize];
	for (int i = 0, j = 0; i < size; i++)
	{
		if (i == (numDel-1)) continue;
		newArray[j] = arr[i];
		j++;
	}
	clearMemory(arr);
	return newArray;
}

void clearMemory(int* &arr) // функция очищает память занимаемую массивом
{
	if (arr == NULL) return;
	delete[]arr;
	arr = NULL;
}

int numCheck(int number, int size) // функция проверяет правильность вводимого числа
{
	while (number <= 0 || number > size)
	{
		cout << "Вы ввели недопустимое значение. Введите значение в диапазоне от 1 до " << size << ": ";
		cin >> number;
	}
	return number;
}
int * addItems(int* arr, int size, int numAdd, int& newSize) //функция добавления элемента в массив
{

	if (arr == NULL) return NULL;
	newSize = size + 1;
	numAdd = numCheck(numAdd, newSize);
	int * newArray = new int[newSize];
	for (int i = 0, j = 0; i < size; i++)
	{
		if (i == (numAdd - 1))
		{
			newArray[j] = rand() % 1000;
			j++;
		}
		newArray[j] = arr[i];
		j++;
	}
	clearMemory(arr);
	return newArray;
}